name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo_sqlite
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPStan
        run: composer code:phpstan

      - name: Check coding standards
        run: composer code:style:check

  tests:
    name: Tests (PHP ${{ matrix.php }}, TYPO3 ${{ matrix.typo3 }}, ${{ matrix.db }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        typo3: ['12.4', '13.0']
        db: ['sqlite', 'mariadb', 'postgres']
        exclude:
          - php: '8.1'
            typo3: '13.0'

    services:
      mariadb:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: typo3
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: typo3
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, pdo_sqlite, pdo_mysql, pdo_pgsql
          coverage: xdebug

      - name: Install TYPO3 ${{ matrix.typo3 }}
        run: |
          composer require --dev --no-update typo3/cms-core:"^${{ matrix.typo3 }}"
          composer install --prefer-dist --no-progress

      - name: Run Unit Tests
        run: composer test:unit

      - name: Run Functional Tests (SQLite)
        if: matrix.db == 'sqlite'
        run: composer test:functional
        env:
          typo3DatabaseDriver: pdo_sqlite

      - name: Run Functional Tests (MariaDB)
        if: matrix.db == 'mariadb'
        run: composer test:functional
        env:
          typo3DatabaseDriver: pdo_mysql
          typo3DatabaseHost: 127.0.0.1
          typo3DatabasePort: 3306
          typo3DatabaseUsername: root
          typo3DatabasePassword: root
          typo3DatabaseName: typo3

      - name: Run Functional Tests (PostgreSQL)
        if: matrix.db == 'postgres'
        run: composer test:functional
        env:
          typo3DatabaseDriver: pdo_pgsql
          typo3DatabaseHost: 127.0.0.1
          typo3DatabasePort: 5432
          typo3DatabaseUsername: postgres
          typo3DatabasePassword: postgres
          typo3DatabaseName: typo3

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo_sqlite
          coverage: xdebug

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate coverage
        run: composer test:coverage

      - name: Check coverage threshold
        run: composer test:coverage:check

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: .Build/logs/clover.xml
          fail_ci_if_error: true
